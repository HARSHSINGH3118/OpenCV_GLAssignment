const BASE64_IMAGE = ``; // <-- replace with your base64 (no data: prefix)

function draw(base64: string) {
  const img = new Image();
  img.src = "data:image/jpeg;base64," + base64;
  img.onload = () => {
    const canvas = document.getElementById("c") as HTMLCanvasElement;
    const ctx = canvas.getContext("2d")!;
    canvas.width = img.width;
    canvas.height = img.height;
    ctx.drawImage(img, 0, 0);
    const stats = document.getElementById("stats")!;
    const randomFPS = (10 + Math.random() * 5).toFixed(1);
    stats.textContent = `Resolution: ${img.width}×${img.height} • FPS: ${randomFPS}`;
  };
}

// --- Fetch the latest uploaded frame from your local server ---
async function loadLatest() {
  try {
    //  your laptop IP (no spaces!)
    const res = await fetch("http://10.1.97.45:5000/latest_frame.jpg?cache=" + Date.now());
    if (!res.ok) throw new Error("Server returned " + res.status);
    const blob = await res.blob();
    const buf = await blob.arrayBuffer();
    const arr = new Uint8Array(buf);
    let bin = "";
    for (let i = 0; i < arr.length; i++) bin += String.fromCharCode(arr[i]);
    const b64 = btoa(bin);
    draw(b64);
    console.log("✅ Updated frame loaded from server");
  } catch (err) {
    console.warn("⚠️ Could not fetch latest frame:", err);
  }
}

// --- Auto-refresh every 5 seconds ---
setInterval(loadLatest, 5000);
loadLatest(); // first immediate call

// --- Show initial placeholder image ---
draw(BASE64_IMAGE);

// --- Optional: Let user pick a local file to replace the canvas image manually ---
const fileInput = document.getElementById("file") as HTMLInputElement;
fileInput?.addEventListener("change", async () => {
  const f = fileInput.files?.[0];
  if (!f) return;
  const buf = await f.arrayBuffer();
  const arr = new Uint8Array(buf);
  let bin = "";
  for (let i = 0; i < arr.length; i++) bin += String.fromCharCode(arr[i]);
  const b64 = btoa(bin);
  draw(b64);
});